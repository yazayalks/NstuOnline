// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using NstuOnline.EducationalStructure.Infrastructure.Database;

#nullable disable

namespace NstuOnline.EducationalStructure.Infrastructure.Database.Migrations
{
    [DbContext(typeof(EducationalStructureContext))]
    [Migration("20240326220334_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("NstuOnline.EducationalStructureService.Domain.Entity.AccreditationType", b =>
                {
                    b.Property<byte>("Id")
                        .HasColumnType("smallint");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("accreditation_type", (string)null);
                });

            modelBuilder.Entity("NstuOnline.EducationalStructureService.Domain.Entity.Department", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("FacultyId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.HasIndex("FacultyId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("department", (string)null);
                });

            modelBuilder.Entity("NstuOnline.EducationalStructureService.Domain.Entity.Faculty", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("faculty", (string)null);
                });

            modelBuilder.Entity("NstuOnline.EducationalStructureService.Domain.Entity.Flow", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("GroupId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.ToTable("flow", (string)null);
                });

            modelBuilder.Entity("NstuOnline.EducationalStructureService.Domain.Entity.Group", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<Guid>("DepartmentId")
                        .HasColumnType("uuid");

                    b.Property<byte>("Semester")
                        .HasColumnType("smallint");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("group", (string)null);
                });

            modelBuilder.Entity("NstuOnline.EducationalStructureService.Domain.Entity.Specialization", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<Guid>("DepartmentId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("DepartmentId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("specialization", (string)null);
                });

            modelBuilder.Entity("NstuOnline.EducationalStructureService.Domain.Entity.Student", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("GroupId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("SyllabusId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("SyllabusId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("student", (string)null);
                });

            modelBuilder.Entity("NstuOnline.EducationalStructureService.Domain.Entity.StudyFormType", b =>
                {
                    b.Property<byte>("Id")
                        .HasColumnType("smallint");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("study_form_type", (string)null);
                });

            modelBuilder.Entity("NstuOnline.EducationalStructureService.Domain.Entity.StudyLevel", b =>
                {
                    b.Property<byte>("Id")
                        .HasColumnType("smallint");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<byte>("NbSemester")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("study_level", (string)null);
                });

            modelBuilder.Entity("NstuOnline.EducationalStructureService.Domain.Entity.Subject", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("subject", (string)null);
                });

            modelBuilder.Entity("NstuOnline.EducationalStructureService.Domain.Entity.Syllabus", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<byte>("AccreditationTypeId")
                        .HasColumnType("smallint");

                    b.Property<Guid>("SpecializationId")
                        .HasColumnType("uuid");

                    b.Property<byte>("StudyFormTypeId")
                        .HasColumnType("smallint");

                    b.Property<byte>("StudyLevelId")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("AccreditationTypeId");

                    b.HasIndex("SpecializationId");

                    b.HasIndex("StudyFormTypeId");

                    b.HasIndex("StudyLevelId");

                    b.ToTable("syllabus", (string)null);
                });

            modelBuilder.Entity("NstuOnline.EducationalStructureService.Domain.Entity.SyllabusSubject", b =>
                {
                    b.Property<Guid>("SubjectId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("SyllabusId")
                        .HasColumnType("uuid");

                    b.Property<byte>("ConsultationHours")
                        .HasColumnType("smallint");

                    b.Property<byte>("LabHours")
                        .HasColumnType("smallint");

                    b.Property<byte>("LectureHours")
                        .HasColumnType("smallint");

                    b.Property<byte>("NbControlWork")
                        .HasColumnType("smallint");

                    b.Property<byte>("NbCourseWork")
                        .HasColumnType("smallint");

                    b.Property<byte>("NbSettlementWork")
                        .HasColumnType("smallint");

                    b.Property<byte>("PractiseHours")
                        .HasColumnType("smallint");

                    b.Property<byte>("Semester")
                        .HasColumnType("smallint");

                    b.Property<bool>("WithExam")
                        .HasColumnType("boolean");

                    b.Property<bool>("WithGos")
                        .HasColumnType("boolean");

                    b.Property<bool>("WithСredit")
                        .HasColumnType("boolean");

                    b.HasKey("SubjectId", "SyllabusId");

                    b.HasIndex("SyllabusId");

                    b.ToTable("syllabus_subject", (string)null);
                });

            modelBuilder.Entity("NstuOnline.EducationalStructureService.Domain.Entity.Teacher", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("DepartmentId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("teacher", (string)null);
                });

            modelBuilder.Entity("NstuOnline.EducationalStructureService.Domain.Entity.TeachingAssignment", b =>
                {
                    b.Property<Guid>("SubjectId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("TeacherId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("GroupId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsMain")
                        .HasColumnType("boolean");

                    b.HasKey("SubjectId", "TeacherId", "GroupId");

                    b.HasIndex("GroupId");

                    b.HasIndex("TeacherId");

                    b.ToTable("teaching_assignment", (string)null);
                });

            modelBuilder.Entity("NstuOnline.EducationalStructureService.Domain.Entity.Department", b =>
                {
                    b.HasOne("NstuOnline.EducationalStructureService.Domain.Entity.Faculty", "Faculty")
                        .WithMany()
                        .HasForeignKey("FacultyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Faculty");
                });

            modelBuilder.Entity("NstuOnline.EducationalStructureService.Domain.Entity.Flow", b =>
                {
                    b.HasOne("NstuOnline.EducationalStructureService.Domain.Entity.Group", "Group")
                        .WithMany()
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");
                });

            modelBuilder.Entity("NstuOnline.EducationalStructureService.Domain.Entity.Group", b =>
                {
                    b.HasOne("NstuOnline.EducationalStructureService.Domain.Entity.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("NstuOnline.EducationalStructureService.Domain.Entity.Specialization", b =>
                {
                    b.HasOne("NstuOnline.EducationalStructureService.Domain.Entity.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("NstuOnline.EducationalStructureService.Domain.Entity.Student", b =>
                {
                    b.HasOne("NstuOnline.EducationalStructureService.Domain.Entity.Group", "Group")
                        .WithMany()
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NstuOnline.EducationalStructureService.Domain.Entity.Syllabus", "Syllabus")
                        .WithMany()
                        .HasForeignKey("SyllabusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");

                    b.Navigation("Syllabus");
                });

            modelBuilder.Entity("NstuOnline.EducationalStructureService.Domain.Entity.Syllabus", b =>
                {
                    b.HasOne("NstuOnline.EducationalStructureService.Domain.Entity.AccreditationType", "AccreditationType")
                        .WithMany()
                        .HasForeignKey("AccreditationTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NstuOnline.EducationalStructureService.Domain.Entity.Specialization", "Specialization")
                        .WithMany()
                        .HasForeignKey("SpecializationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NstuOnline.EducationalStructureService.Domain.Entity.StudyFormType", "StudyFormType")
                        .WithMany()
                        .HasForeignKey("StudyFormTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NstuOnline.EducationalStructureService.Domain.Entity.StudyLevel", "StudyLevel")
                        .WithMany()
                        .HasForeignKey("StudyLevelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AccreditationType");

                    b.Navigation("Specialization");

                    b.Navigation("StudyFormType");

                    b.Navigation("StudyLevel");
                });

            modelBuilder.Entity("NstuOnline.EducationalStructureService.Domain.Entity.SyllabusSubject", b =>
                {
                    b.HasOne("NstuOnline.EducationalStructureService.Domain.Entity.Subject", "Subject")
                        .WithMany()
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NstuOnline.EducationalStructureService.Domain.Entity.Syllabus", "Syllabus")
                        .WithMany()
                        .HasForeignKey("SyllabusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subject");

                    b.Navigation("Syllabus");
                });

            modelBuilder.Entity("NstuOnline.EducationalStructureService.Domain.Entity.Teacher", b =>
                {
                    b.HasOne("NstuOnline.EducationalStructureService.Domain.Entity.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("NstuOnline.EducationalStructureService.Domain.Entity.TeachingAssignment", b =>
                {
                    b.HasOne("NstuOnline.EducationalStructureService.Domain.Entity.Group", "Group")
                        .WithMany()
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NstuOnline.EducationalStructureService.Domain.Entity.Subject", "Subject")
                        .WithMany()
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NstuOnline.EducationalStructureService.Domain.Entity.Teacher", "Teacher")
                        .WithMany()
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");

                    b.Navigation("Subject");

                    b.Navigation("Teacher");
                });
#pragma warning restore 612, 618
        }
    }
}
