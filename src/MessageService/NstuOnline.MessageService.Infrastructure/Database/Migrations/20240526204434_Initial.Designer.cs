// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using NstuOnline.MessageService.Infrastructure.Database;

#nullable disable

namespace NstuOnline.MessageService.Infrastructure.Database.Migrations
{
    [DbContext(typeof(MessageContext))]
    [Migration("20240526204434_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("NstuOnline.MessageService.Domain.Entities.Attachment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<byte>("AttachmentTypeId")
                        .HasColumnType("smallint");

                    b.Property<Guid>("FileId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("AttachmentTypeId");

                    b.ToTable("attachment", (string)null);
                });

            modelBuilder.Entity("NstuOnline.MessageService.Domain.Entities.AttachmentType", b =>
                {
                    b.Property<byte>("Id")
                        .HasColumnType("smallint");

                    b.Property<string>("Code")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("attachment_type", (string)null);

                    b.HasData(
                        new
                        {
                            Id = (byte)1,
                            Code = "Документ",
                            Name = "document"
                        },
                        new
                        {
                            Id = (byte)2,
                            Code = "Фото",
                            Name = "photo"
                        },
                        new
                        {
                            Id = (byte)3,
                            Code = "Голосовое",
                            Name = "voice"
                        });
                });

            modelBuilder.Entity("NstuOnline.MessageService.Domain.Entities.Chat", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<byte>("ChatTypeId")
                        .HasColumnType("smallint");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("ChatTypeId");

                    b.ToTable("chat", (string)null);
                });

            modelBuilder.Entity("NstuOnline.MessageService.Domain.Entities.ChatType", b =>
                {
                    b.Property<byte>("Id")
                        .HasColumnType("smallint");

                    b.Property<string>("Code")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("chat_type", (string)null);

                    b.HasData(
                        new
                        {
                            Id = (byte)1,
                            Code = "Диалог",
                            Name = "dialog"
                        },
                        new
                        {
                            Id = (byte)2,
                            Code = "Беседа",
                            Name = "conversation"
                        },
                        new
                        {
                            Id = (byte)3,
                            Code = "Беседа группы",
                            Name = "group_conversation"
                        },
                        new
                        {
                            Id = (byte)4,
                            Code = "Избранное",
                            Name = "favorite"
                        },
                        new
                        {
                            Id = (byte)5,
                            Code = "Беседа по дисциплине",
                            Name = "subject_conversation"
                        },
                        new
                        {
                            Id = (byte)6,
                            Code = "Диалог по работе",
                            Name = "work_dialog"
                        });
                });

            modelBuilder.Entity("NstuOnline.MessageService.Domain.Entities.ChatUser", b =>
                {
                    b.Property<Guid>("ChatId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("ChatId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("chat_user", (string)null);
                });

            modelBuilder.Entity("NstuOnline.MessageService.Domain.Entities.Message", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("ChatId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<byte>("MessageStatusId")
                        .HasColumnType("smallint");

                    b.Property<byte>("MessageTypeId")
                        .HasColumnType("smallint");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uuid");

                    b.Property<string>("Text")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ChatId");

                    b.HasIndex("MessageStatusId");

                    b.HasIndex("MessageTypeId");

                    b.HasIndex("ParentId");

                    b.HasIndex("UserId");

                    b.ToTable("message", (string)null);
                });

            modelBuilder.Entity("NstuOnline.MessageService.Domain.Entities.MessageAttachment", b =>
                {
                    b.Property<Guid>("MessageId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("AttachmentId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("AttachmentsId")
                        .HasColumnType("uuid");

                    b.HasKey("MessageId", "AttachmentId");

                    b.HasIndex("AttachmentId");

                    b.HasIndex("AttachmentsId");

                    b.ToTable("message_attachment", (string)null);
                });

            modelBuilder.Entity("NstuOnline.MessageService.Domain.Entities.MessageStatus", b =>
                {
                    b.Property<byte>("Id")
                        .HasColumnType("smallint");

                    b.Property<string>("Code")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("message_status", (string)null);

                    b.HasData(
                        new
                        {
                            Id = (byte)1,
                            Code = "Отправленно",
                            Name = "sent"
                        },
                        new
                        {
                            Id = (byte)2,
                            Code = "Прочитанно",
                            Name = "read"
                        });
                });

            modelBuilder.Entity("NstuOnline.MessageService.Domain.Entities.MessageType", b =>
                {
                    b.Property<byte>("Id")
                        .HasColumnType("smallint");

                    b.Property<string>("Code")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("message_type", (string)null);

                    b.HasData(
                        new
                        {
                            Id = (byte)1,
                            Code = "Текст",
                            Name = "text"
                        },
                        new
                        {
                            Id = (byte)2,
                            Code = "Вложения",
                            Name = "attachments"
                        },
                        new
                        {
                            Id = (byte)3,
                            Code = "Текст и вложения",
                            Name = "text_and_attachments"
                        },
                        new
                        {
                            Id = (byte)4,
                            Code = "Фото",
                            Name = "photo"
                        },
                        new
                        {
                            Id = (byte)5,
                            Code = "Голосовое",
                            Name = "voice"
                        });
                });

            modelBuilder.Entity("NstuOnline.MessageService.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.HasKey("UserId");

                    b.ToTable("user", (string)null);
                });

            modelBuilder.Entity("NstuOnline.MessageService.Domain.Entities.Attachment", b =>
                {
                    b.HasOne("NstuOnline.MessageService.Domain.Entities.AttachmentType", "AttachmentType")
                        .WithMany()
                        .HasForeignKey("AttachmentTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AttachmentType");
                });

            modelBuilder.Entity("NstuOnline.MessageService.Domain.Entities.Chat", b =>
                {
                    b.HasOne("NstuOnline.MessageService.Domain.Entities.ChatType", "ChatType")
                        .WithMany()
                        .HasForeignKey("ChatTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChatType");
                });

            modelBuilder.Entity("NstuOnline.MessageService.Domain.Entities.ChatUser", b =>
                {
                    b.HasOne("NstuOnline.MessageService.Domain.Entities.Chat", "Chat")
                        .WithMany("ChatUsers")
                        .HasForeignKey("ChatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NstuOnline.MessageService.Domain.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Chat");

                    b.Navigation("User");
                });

            modelBuilder.Entity("NstuOnline.MessageService.Domain.Entities.Message", b =>
                {
                    b.HasOne("NstuOnline.MessageService.Domain.Entities.Chat", null)
                        .WithMany("Messages")
                        .HasForeignKey("ChatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NstuOnline.MessageService.Domain.Entities.MessageStatus", "MessageStatus")
                        .WithMany()
                        .HasForeignKey("MessageStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NstuOnline.MessageService.Domain.Entities.MessageType", "MessageType")
                        .WithMany()
                        .HasForeignKey("MessageTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NstuOnline.MessageService.Domain.Entities.Message", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId");

                    b.HasOne("NstuOnline.MessageService.Domain.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MessageStatus");

                    b.Navigation("MessageType");

                    b.Navigation("Parent");

                    b.Navigation("User");
                });

            modelBuilder.Entity("NstuOnline.MessageService.Domain.Entities.MessageAttachment", b =>
                {
                    b.HasOne("NstuOnline.MessageService.Domain.Entities.Attachment", "Attachment")
                        .WithMany()
                        .HasForeignKey("AttachmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NstuOnline.MessageService.Domain.Entities.Attachment", null)
                        .WithMany()
                        .HasForeignKey("AttachmentsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NstuOnline.MessageService.Domain.Entities.Message", "Message")
                        .WithMany()
                        .HasForeignKey("MessageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Attachment");

                    b.Navigation("Message");
                });

            modelBuilder.Entity("NstuOnline.MessageService.Domain.Entities.Chat", b =>
                {
                    b.Navigation("ChatUsers");

                    b.Navigation("Messages");
                });

            modelBuilder.Entity("NstuOnline.MessageService.Domain.Entities.Message", b =>
                {
                    b.Navigation("Children");
                });
#pragma warning restore 612, 618
        }
    }
}
