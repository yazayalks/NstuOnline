version: "3"

networks:
  loki:

services:
  bff:
    image: nstuonline.bff.api
    depends_on:
      message-service:
        condition: service_started
      educational-structure-service:
        condition: service_started
      album-service:
        condition: service_started
      event-service:
        condition: service_started
      file-service:
        condition: service_started
      portfolio-service:
        condition: service_started
      wall-service:
        condition: service_started
      work-completion-service:
        condition: service_started
      integration-service:
        condition: service_started
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
    deploy:
      replicas: 1
    build:
      context: .
      dockerfile: ../src/BFF/NstuOnline.BFF.Api/Dockerfile
      
  message-service:
    image: nstuonline.messageservice.api
    ports:
      - 80
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
    deploy:
      replicas: 2
    build:
      context: .
      dockerfile: ../src/MessageService/NstuOnline.MessageService.Api/Dockerfile
  
  educational-structure-service:
    image: nstuonline.educationalstructureservice.api
    ports:
      - 80
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
    deploy:
      replicas: 1
    build:
      context: .
      dockerfile: ../src/EducationalStructure/NstuOnline.EducationalStructure.Api/Dockerfile
      
  album-service:
    image: nstuonline.albumservice.api
    ports:
      - 80
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
    deploy:
      replicas: 1
    build:
      context: .
      dockerfile: ../src/AlbumService/NstuOnline.AlbumService.Api/Dockerfile
  
  event-service:
    image: nstuonline.eventservice.api
    ports:
      - 80
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
    deploy:
      replicas: 1
    build:
      context: .
      dockerfile: ../src/EventService/NstuOnline.EventService.Api/Dockerfile
  
  file-service:
    image: nstuonline.fileservice.api
    ports:
      - 80
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
    deploy:
      replicas: 1
    build:
      context: .
      dockerfile: ../src/FileService/NstuOnline.FileService.Api/Dockerfile
      
  portfolio-service:
    image: nstuonline.portfolioservice.api
    ports:
      - 80
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
    deploy:
      replicas: 1
    build:
      context: .
      dockerfile: ../src/PortfolioService/NstuOnline.PortfolioService.Api/Dockerfile
  
  wall-service:
    image: nstuonline.wallservice.api
    ports:
      - 80
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
    deploy:
      replicas: 1
    build:
      context: .
      dockerfile: ../src/WallService/NstuOnline.WallService.Api/Dockerfile
      
  work-completion-service:
    image: nstuonline.workcompletionservice.api
    ports:
      - 80
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
    deploy:
      replicas: 1
    build:
      context: .
      dockerfile: ../src/WorkCompletionService/NstuOnline.WorkCompletionService.Api/Dockerfile
  
  integration-service:
    image: nstuonline.integrationservice.api
    ports:
      - 80
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
    deploy:
      replicas: 1
    build:
      context: .
      dockerfile: ../src/IntegrationService/NstuOnline.IntegrationService.Api/Dockerfile
      
  loki:
    image: grafana/loki:latest
    ports:
      - "3100:3100"
      - 7946
      - 9095
    volumes:
      - ./shared/loki-config.yaml:/etc/loki/config.yaml
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - loki
      
  promtail:
    image: grafana/promtail:latest
    volumes:
      - /var/log:/var/log
    command: -config.file=/etc/promtail/config.yml
    networks:
      - loki
  minio:
    image: minio/minio
    entrypoint:
      - sh
      - -euc
      - |
        mkdir -p /data/loki-data && \
        mkdir -p /data/loki-ruler && \
        minio server --console-address ":9001" /data
    environment:
      - MINIO_ROOT_USER=loki
      - MINIO_ROOT_PASSWORD=supersecret
      - MINIO_PROMETHEUS_AUTH_TYPE=public
      - MINIO_UPDATE=off
    ports:
      - "9900:9000"
      - "9901:9001"
    volumes:
      - ./.data/minio:/data
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
      interval: 15s
      timeout: 20s
      retries: 5
    networks:
      - loki

  grafana:
    image: grafana/grafana:latest
    volumes:
      - ./shared/grafana-datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
      - GF_FEATURE_TOGGLES_ENABLE=traceqlEditor
    ports:
      - "3000:3000"
    networks:
      - loki

  tempo:
    image: grafana/tempo:latest
    command: [ "-config.file=/etc/tempo.yaml" ]
    volumes:
      - ./shared/tempo.yaml:/etc/tempo.yaml
      - ./tempo-data:/tmp/tempo
    ports:
      - "14268:14268"  # jaeger ingest
      - "3200:3200"   # tempo
      - "9095:9095" # tempo grpc
      - "4317:4317"  # otlp grpc
      - "4318:4318"  # otlp http
      - "9411:9411"   # zipkin
    networks:
      - loki

  k6-tracing:
    image: ghcr.io/grafana/xk6-client-tracing:v0.0.2
    environment:
      - ENDPOINT=tempo:4317
    restart: always
    depends_on:
      - tempo
    networks:
      - loki

  prometheus:
    image: prom/prometheus:latest
    command:
      - --config.file=/etc/prometheus.yaml
      - --web.enable-remote-write-receiver
      - --enable-feature=exemplar-storage
    volumes:
      - ./shared/prometheus.yaml:/etc/prometheus.yaml
    ports:
      - "9090:9090"
    networks:
      - loki
  
  